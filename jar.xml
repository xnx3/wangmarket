<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.xnx3.wangmarket</groupId>
  <artifactId>wangmarket</artifactId>
  <packaging>jar</packaging>
  <name>wangmarket</name>
  <version>6.6.1</version>
  <description>网市场云建站系统生成 wangmarket.jar 专用。生成方式为 mvn clean package -f jar.xml</description>
  
   <properties>
	    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- 编译时的编码 -->  
		<maven.compiler.encoding>UTF-8</maven.compiler.encoding>  
	    <java.version>1.8</java.version>
	  </properties>
  
	  <!-- 定义公共资源版本 -->
	  <parent>
	    <groupId>com.xnx3.wangmarket.wm</groupId>
	    <artifactId>parent</artifactId>
	    <version>3.10</version>
	  </parent>
	  
  <repositories>
		<repository>
            <id>maven-ali</id>
            <url>https://maven.aliyun.com/repository/public</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
                <checksumPolicy>fail</checksumPolicy>
            </snapshots>
        </repository>
        <repository>
		    <snapshots>
		        <enabled>false</enabled>
		    </snapshots>
		    <id>central</id>
		    <name>bintray</name>
		    <url>http://jcenter.bintray.com</url>
		</repository>
		<repository>
            <id>maven-guanfang</id>
            <url>https://repo1.maven.org/maven2/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
                <checksumPolicy>fail</checksumPolicy>
            </snapshots>
        </repository>
	</repositories>
  
   
  
    
  <!-- 如果打包第三方jar包出来，那就加build，如果只是打包项目，注释掉build -->
  <build>
	    <plugins>
            <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<excludes>
						<!-- 打包成jar时，忽略的包 -->
            			<exclude>**/com/Application*</exclude>
            			<exclude>**/com/ServletInitializer*</exclude>
            			<exclude>**/*.xml</exclude>
            			<exclude>/*.properties</exclude>
            			<exclude>**/*.json</exclude>
            			<exclude>**/*.db</exclude>
          			</excludes>
					<archive>  
						<manifest>  
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>  
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>
					
			<!-- Source -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.2.1</version>
                <executions>
                  <!-- <execution>
                      <id>attach-sources</id>
                      <phase>deploy</phase>
                  </execution> -->
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Javadoc -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.9.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <additionalparam>-Xdoclint:none</additionalparam>
                            <source>${java.version}</source>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- GPG -->
            <!-- <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>1.5</version>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>  -->
	    </plugins>
	    <resources>  
	    	<!-- 将 resource/META-INF 下的配置文件拷贝到jar包 META-INF 目录下 -->  
            <resource>  
                <!-- 指定resources插件处理哪个目录下的资源文件 -->  
                <directory>src/main/resources</directory>  
                <!-- 注意此次必须要放在此目录下才能被访问到 -->  
                <targetPath>./</targetPath>  
                <includes>  
                    <include>META-INF/**</include>  
                </includes>
            </resource> 
            <!-- 将 resource/static 下的配置文件拷贝到jar包  -->  
            <resource>  
                <!-- 指定resources插件处理哪个目录下的资源文件 -->  
                <directory>src/main/resources/static/</directory>  
                <!-- 注意此次必须要放在此目录下才能被访问到 -->  
                <targetPath>META-INF/resources/</targetPath>  
                <includes>  
                    <include>js/**</include>
                    <include>css/**</include>
                    <include>inputModel/**</include>
                    <include>image/**</include>  
                    <include>plugin/**</include>  
                </includes>
            </resource> 
             <!-- 打包时将jsp文件拷贝到META-INF目录下 -->  
            <resource>  
                <!-- 指定resources插件处理哪个目录下的资源文件 -->  
                <directory>src/main/webapp/WEB-INF</directory>  
                <!-- 注意此次必须要放在此目录下才能被访问到 -->  
                <targetPath>META-INF/resources/WEB-INF/</targetPath>  
                <includes>  
                    <include>view/**</include>  
                    <include>plugin/**</include>  
                </includes>  
            </resource>  
            <!-- 打包时将jsp文件拷贝到META-INF目录下 -->
			<resource>
				<!-- 指定resources插件处理哪个目录下的资源文件 -->
				<directory>src/main/webapp</directory>
				<!-- 注意此次必须要放在此目录下才能被访问到 -->
				<targetPath>META-INF/resources/</targetPath>
				<includes>
					<include>plugin/**</include>
				</includes>
			</resource>
        </resources>  
	</build>   
	  
	  
  
  
  <dependencies>  
  		<!-- http/https请求工具 https://github.com/xnx3/http.java -->
		<dependency> 
			<groupId>cn.zvo.http</groupId>
			<artifactId>http</artifactId>
			<version>1.0</version>
		</dependency>
		
		
		<!-- ueditor编辑器 https://github.com/xnx3/ueditor-fileupload -->
		<dependency> 
		    <groupId>cn.zvo.fileupload</groupId>
		    <artifactId>fileupload-framework-ueditor</artifactId>
		    <version>1.2</version>
		</dependency>
	
		<!-- 本地的基础功能如数据库操作等。这个wm文档及源码在  http://wm.zvo.cn  -->
  		<dependency> 
	        <groupId>com.xnx3.wangmarket.wm</groupId>  
	        <artifactId>wm</artifactId>  
	        <version>3.14</version>  
	         <scope>system</scope>  
    	  <systemPath>${project.basedir}/src/main/webapp/WEB-INF/lib/wm-3.14.jar</systemPath>  
	    </dependency>
   </dependencies>  
   
    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>
  
</project>