#	此文件为系统配置文件。如果不了解，可以自行搜索查阅 springboot2 的相关资料
#
# 数据库，默认使用sqlite数据库。如果你懂技术，可以切换为mysql，只需要吧下面的注释的换一下就好。
# mysql 数据库文件： https://gitee.com/mail_osc/wangmarket/blob/master/else/wangmarket.sql
# 注意，Mysql数据库版本必须是 5.7 版本！
# 
# 如果你技术实力不大够，或者时间不充足，可以找我方求助，我们有有偿帮助服务，只收人工工时费。详细参考： https://www.leimingyun.com/pay.html
# 
# author:管雷鸣
#


####### 重要的事情说三遍，mysql数据库必须用5.7版本！必须！ 这里提供 centos 7.4 的 mysql5.7安装命令 http://help.wscso.com/16498.html ########
#数据库的名字，数据库名
database.name=wangmarket
#数据库所在ip地址，连接的ip，如 127.0.0.1
database.ip=192.168.31.242
#数据库连接的登陆账号
spring.datasource.username=root
#spring.datasource.username=
#数据库连接的登陆密码
spring.datasource.password=1CuRMEqiRgaCfsr5@wM1

# Mysql 数据库配置
#spring.datasource.url=jdbc:mysql://${database.ip}:3306/${database.name}?useUnicode=true&characterEncoding=utf-8&useSSL=true
#spring.datasource.url=jdbc:mysql://${database.ip}:3306/${database.name}?useUnicode=true&characterEncoding=utf-8
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# Sqlite数据库配置，默认使用此数据库，无需任何准备及配置就可以直接运行起来
spring.datasource.url=jdbc:sqlite::resource:wangmarket.db
spring.datasource.driver-class-name=org.sqlite.JDBC
spring.jpa.database-platform=com.xnx3.j2ee.dialect.SQLiteDialect

# hikari连接池配置
# 连接池中的最大连接数
spring.datasource.hikari.maximum-pool-size=5

# 升级到springboot2.6.1增加的
spring.main.allow-circular-references=true

# =============下面的如果不懂就不要动了，按照这个配置默认就好==============

#更新数据表  
spring.jpa.properties.hibernate.hbm2ddl.auto=update
spring.jpa.show-sql=false

#访问的后缀名
url.suffix=.do
api.suffix=.json

spring.mvc.view.prefix =/WEB-INF/view/
spring.mvc.view.suffix =.jsp  
application.hello =welcome use iw framework!

#设置改动后不自动重启
spring.devtools.restart.enabled=false
#排除那个目录的文件不需要restart
spring.devtools.restart.exclude=static/**,public/**,site/**,cache/**,META-INF/resources/WEB-INF/view/**,wangmarket.db,head/**

#文件最大上传限制，限制在3MB以内。 单位包括  MB 、 KB、 GB
spring.servlet.multipart.max-file-size=30MB
spring.servlet.multipart.max-request-size=30MB
# 文件上传 https://github.com/xnx3/FileUpload
#
# 设置允许上传的文件最大是多大，比如10MB 单位为 KB、MB ， 如果此项不设置，这里默认是3MB
fileupload.maxSize=30MB

#禁用 spring 的 favicon 的图标，用自己的，在 resources/static/favicon.ico
spring.mvc.favicon.enabled =false

# 错误页，指定发生错误时，跳转的URL。请查看BasicErrorController源码便知  
#server.error.path=/error  

# 主站url，即使用泛解析的主域名访问时，直接跳转到的url
site.masterSiteUrl =login.do

logging.level.root=error

#以下4项，上生产环境以后一定要改！！！！！
#spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
#spring.datasource.druid.stat-view-servlet.allow=127.0.0.1,*
#spring.datasource.druid.stat-view-servlet.login-username=admin
#spring.datasource.druid.stat-view-servlet.login-password=admin
#spring.datasource.druid.stat-view-servlet.enabled=true

# RabbitMQ 如果将下面都注释掉，则是不启用 rabbitMQ
## 其中 RabbitMQ 服务器的搭建，参考 http://help.wscso.com/6924.html
#spring.rabbitmq.host=127.0.0.1
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=admin
#spring.rabbitmq.password=xxxx

# Redis
# 是否启用redis，都注释掉为不启用，host不注释则是启用
#spring.redis.host=127.0.0.1
#spring.redis.port=6379
# 如果redis没有设置密码，请把下面的 spring.redis.password 注释掉
#spring.redis.password=pwd
#超时时间，单位是毫秒
#spring.redis.timeout=3000

# 短信发送，短信通道。如果注释掉则是不启用。 网市场v5.2增加。短信通道开通及充值，联系 www.leimingyun.com
#sms.uid=10000
#sms.password=10000

# 企业版授权码。授权参见 https://www.leimingyun.com/price.html 当然，不授权完全可以免费使用，并且可用于商业使用。只不过企业版拥有更多功能插件，采用云部署，有更多锦上添花的功能。
#authorize=



# ElasticSearch 设置。
# 判断是否使用es进行日志记录，条件便是 hostname 是否启用，若启用，则使用ElasticSearch。那么 ActionLogUtil 、 ElasticSearchMode 则可以使用
# 如果 wm.elasticsearch.hostname 开启，那么优先使用es作为日志存储，所配置的阿里云、华为云日志服务等将会无效。 （此为附加锦上添花的功能，要开启需要授权版本日志模块支持）
#wm.elasticsearch.hostname=127.0.0.1
#wm.elasticsearch.port=9200
#wm.elasticsearch.scheme=http

# 当前服务器是否是无外网环境的服务器，也就是当前服务器无法联通外网，  不设置默认是true是可以联通外网的。  如果设置为false则是无法联通外网
#wm.server.net=true

# 如果你使用的是本地存储的方式，并没有配置云存储（比如将图片等文件存储到华为云OBS上，授权版本的都是存储到云存储中），那么这个配置你不用管，本地存储这个配置是不起任何作用的。这个配置是为云存储服务的。
# 用户访问某个网站页面时，会先经过一层缓存，缓存中没有，再从云存储中拉数据显示给用户。一是极大提高了响应速度，二是比如被DDOS攻击时对云存储进行了有效的保护。
# 这个配置是缓存层中，将访问的页面缓存到服务器的内存，还是缓存到服务器的磁盘中。
# 这里不配置默认是10000，约等于10KB， 单位是字符的数量。也就是一个html页面有多少字符，便是此。
# 当访问的页面的超过10KB时，因为太大将缓存到磁盘中，如果不超过10KB，那么就缓存到内存中。缓存到内存中可以加快响应速度，用户访问网站时打开的速度更快！
#wangmarket.domain.cacheToMemorySize=10000

# 在安装网市场时，是否出现选择存储方式的页面，也就是选择使用本地存储，还是华为云OBS存储的那个界面。这个主要用于华为云解决方案中，快速入门体验版使用，简化安装过程。
# 默认会显示，如果此处为false，则是不会出现选择存储方式的页面
#wangmarket.install.selectStorage=false

#
# 日志 https://github.com/xnx3/log
#
# 缓存日志的最大条数。当达到这个条数后，将自动提交日志。默认为100
# 这里方便测试是否提交，直接设为1。正常情况下建议使用默认值即可，不用设置
log.cacheMaxNumber=200
# 缓存日志的最大时间，单位为秒。不设置默认是60。超过这个时间后，将会自动提交日志。即每隔多长时间就自动提交日志，然后重新开始累计即时
# 这里方便测试是否提交，直接设为1。正常情况下建议使用默认值即可，不用设置
log.cacheMaxTime=120
# 设置日志存储到哪个日志仓库中【此项必填】
# 这里以数据库为例解释，以便于理解。数据库有多个表，每个表都会存储不同的数据（结构）
# 这里便是每个表代表一个数据仓库。通过设置此，可切换将数据存入不同的数据仓库
# 例如 ：
#     elasticsearch ： 这里便是设置索引的名字，可以将不同的数据存入不同的索引中
#     阿里云SLS日志服务 ： 这里便是设置的日志库的名字，可将不同的数据存入不同的日志库中
#     华为云LTS日志服务 ： 这里便是设置的日志流的名字
log.tableName=useraction
#
# 当前使用的是哪种数据存储方式
#
# 如果此不设置，默认不做任何动作
# 下面便是具体针对自带默认的写出日志文件这种存储方式的配置了
# 保存日志的目录，格式如 /mnt/tomcat8/logs/ 、或者windows服务器的话路径如 C:\\Users\\Administrator\\Desktop\\log\\  注意最后的斜杠不能拉下。如果不设置此，则不开启，日志不会写出到日志文件，没任何动作。 
# 如果你服务器时linux，开发环境时windows，为了省事你也可以直接使用linux路径如 /mnt/tomcat8/logs/ 在windows中也能正常运行
# 每天都会自动创建一个日志文件，当天的日志保存在对应天数的日志文件中。比如你设置的路径是  /mnt/tomcat8/logs/ 那么日志在保存时会自动创建一个文件 /mnt/tomcat8/logs/tablename_yyyy-mm-dd.log ，将当天的日志，按照每行一个日志记录，存放于文件中
#log.datasource.file.path=C:\\Users\\Administrator\\Desktop\\log\\
#log.datasource.file.path=/mnt/tomcat8/logs/

# 文件上传 https://github.com/xnx3/FileUpload
#
# 设置允许上传的文件最大是多大，比如10MB 单位为 KB、MB ， 如果此项不设置，这里默认是3MB
#fileupload.maxSize=10MB
# 设置允许上传的后缀名,传入格式如 png|jpg|gif|zip 多个用英文|分割。如果不设置，默认允许像是pdf、word、图片、音频、视频、zip等常用的且安全的文件后缀都可上传
#fileupload.allowUploadSuffix=jpg|png|txt|zip
# 设置上传后文件所访问URL的域名，传入如： http://xxxx.com/  注意格式，后面以 / 结尾。这里结合CDN加速一起使用效果更佳
#fileupload.domain=http://res.zvo.cn/

# 多语言全自动翻译-国际化支持  https://github.com/xnx3/translate
# 是否启用，默认为启用，为true，设为false便是不启用
# translate.use=false
# 翻译服务的api主机，默认使用云端的，可私有化部署，私有化部署后，将其配置到这里即可。参考 https://github.com/xnx3/translate_service
# translate.api.host=http://123.123.123.123/
# 默认以什么语种显示。如果不设置，那么不进行翻译，当前是什么语种，就怎么显示。如果设置了，比如本地当前语种是简体中文，这里设置为english，那么用户第一次使用时，会自动翻译为english进行显示。如果用户手动切换为其他语种比如韩语，那么就遵循用户手动切换的为主，显示韩语。
# translate.language.setDefaultTo=english